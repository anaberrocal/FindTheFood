{"version":3,"sources":["components/assets/findthefood.png","components/Business/Business.js","components/BusinessList/BusinessList.js","components/SearchBar/SearchBar.js","util/Yelp.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Business","className","src","this","props","business","imageSrc","alt","name","address","city","state","zipCode","category","rating","reviewCount","React","Component","BusinessList","businesses","map","key","id","SearchBar","handleSearchEnter","event","searchYelp","term","location","sortBy","preventDefault","handleTermChange","bind","handleLocationChange","handleSearch","sortByOptions","sortByOption","setState","target","value","Object","keys","sortByOptionValue","getSortByClass","onClick","handleSortByChange","onKeyPress","renderSortByOptions","placeholder","onChange","href","Yelp","search","fetch","headers","Authorization","then","response","json","jsonResponse","image_url","address1","zip_code","categories","title","review_count","App","logo","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51416a32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/findthefood.1ffb30e7.png\";","import React from 'react';\nimport './Business.css';\n\n\nclass Business extends React.Component {\n render(){\n  return (\n    <div className=\"Business\">\n  <div className=\"image-container\">\n    <img src={this.props.business.imageSrc} alt=''/>\n  </div>\n  <h2>{this.props.business.name}</h2>\n  <div className=\"Business-information\">\n    <div className=\"Business-address\">\n      <p>{this.props.business.address}</p>\n      <p>{this.props.business.city}</p>\n      <p>{this.props.business.state} {this.props.business.zipCode}</p>\n    </div>\n    <div className=\"Business-reviews\">\n      <h3>{this.props.business.category}</h3>\n      <h3 className=\"rating\">{this.props.business.rating} stars</h3>\n      <p>{this.props.business.reviewCount} reviews </p>\n    </div>\n  </div>\n</div>  \n  );   \n }\n}\nexport default Business;","import React from 'react';\nimport './BusinessList.css';\nimport Business from '../Business/Business.js';\n\nclass BusinessList extends React.Component {\nrender() {\n    return (\n        <div className=\"BusinessList\">\n          {\n            this.props.businesses.map(business => {\n              return <Business key={business.id} business={business}/>\n            })\n          }\n        </div>\n    ); \n  } \n}\n\nexport default BusinessList;","import React from 'react';\nimport './SearchBar.css';\n\n\n\n  class SearchBar extends React.Component {\n    constructor(props){\n     super(props);\n     this.state = {\n       term: '',\n       location: '',\n       sortBy: 'best_match'\n     };\n\n     this.handleTermChange = this.handleTermChange.bind(this);\n     this.handleLocationChange = this.handleLocationChange.bind(this);\n     this.handleSearch = this.handleSearch.bind(this);\n\n     this.sortByOptions = {\n      'Best Match': 'best_match',\n      'Highest Rated': 'rating',\n      'Most Reviewed': 'review_count'\n     };\n\n    }\n\n    getSortByClass(sortByOption) {\n      if(this.state.sortBy === sortByOption) {\n        return 'active';\n      } \n        return '';\n      }\n\n    handleSortByChange(sortByOption) {\n      this.props.searchYelp(this.state.term, this.state.location, sortByOption);\n      this.setState( {\n        sortBy: sortByOption,\n       });\n\n    }\n\n    handleTermChange(event) {\n      this.setState( {\n        term: event.target.value,\n      });\n    };\n\n    handleLocationChange(event) {\n      this.setState( {\n        location: event.target.value,\n      });\n    };\n\n    handleSearch(event){\n      this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n      event.preventDefault(); \n    };\n\n    handleSearchEnter = (event) => {\n      if (event.key === \"Enter\") {\n        this.props.searchYelp(this.state.term, this.state.location, this.state.sortBy);\n        event.preventDefault();\n      }\n    }\n\nrenderSortByOptions() {\n return Object.keys(this.sortByOptions).map(sortByOption => {\nlet sortByOptionValue = this.sortByOptions[sortByOption];\n return (<li key={sortByOptionValue} \n            className={this.getSortByClass(sortByOptionValue)} \n            onClick={this.handleSortByChange.bind(this, sortByOptionValue)}>{sortByOption}\n </li>);\n});\n}\n\nrender() {\n    return (\n    <div className=\"SearchBar\" onKeyPress={this.handleSearchEnter}>\n    <div className=\"SearchBar-sort-options\">\n      <ul>\n        {this.renderSortByOptions()}\n      </ul>\n    </div>\n    <div className=\"SearchBar-fields\">\n      <input placeholder=\"Search Businesses\" onChange={this.handleTermChange} />\n      <input placeholder=\"Where?\" onChange={this.handleLocationChange} />\n    </div>\n    <div className=\"SearchBar-submit\">\n      <a onClick= {this.handleSearch} href=\"foo\" >Let's Go</a>\n    </div>\n  </div> \n    );\n   }\n  }\n\n  export default SearchBar;","const apiKey = \"yYMRoYuNOlxGxOEY5tE6H7G4R6svVYSW1V5SuDpxIMoBZvvS4lQQj6DJPKYpe-O84RMl7rD545kp5FgoDSIZzxocEjENjlgVOa9WphE7Wv6JpU11lpuJPujnkHA4XnYx\";\nconst Yelp = {\n\n    search(term, location, sortBy) {\n        return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, \n        { headers: {\n            Authorization: `Bearer ${apiKey}`,\n                }\n         }).then( (response) => {\n             return response.json();\n         }).then( (jsonResponse) => {\n            if(jsonResponse.businesses) {\n               return jsonResponse.businesses.map(business => {\n                   \n                   return {\n                       id: business.id,\n                       imageSrc: business.image_url,\n                       name :business.name,\n                       address: business.location.address1,\n                       city: business.location.city,\n                       state: business.location.state,\n                       zipCode: business.location.zip_code,\n                       category: business.categories[0].title,\n                       rating: business.rating,\n                       reviewCount: business.review_count,\n                   }\n    \n               });  \n            } \n         });\n    \n    }\n\n};\n\n \nexport default Yelp;","import React from 'react';\nimport './App.css';\nimport BusinessList from '../BusinessList/BusinessList.js';\nimport SearchBar from '../SearchBar/SearchBar.js';\nimport Yelp from '../../util/Yelp.js';\nimport logo from '../assets/findthefood.png';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      businesses: [],\n    };\n    this.searchYelp = this.searchYelp.bind(this);\n  }\n  searchYelp(term, location, sortBy) {\n   Yelp.search(term, location, sortBy).then(businesses => {\n     this.setState( {businesses: businesses});\n   });\n  } \n  \n  render() {\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n      <img className=\"logo\" src={logo}/>\n    <h1>FIND<span className=\"the\">THE</span>FOOD</h1>\n    </div>\n    {<SearchBar searchYelp={this.searchYelp} />}\n    {<BusinessList businesses={this.state.businesses} />}\n    <div id=\"footer-container\"><footer className=\"footer\">Made with <span>❤️</span> by <a target=\"_blank\" href=\"https://anaberrocal.com/\">Ana Berrocal</a></footer></div>\n    </div>\n      );\n    }\n  };\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}